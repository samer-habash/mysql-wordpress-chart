---
# Source: wordpress-mysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysql
  labels:
    app: wordpress
    app: wordpress
---
# Source: wordpress-mysql/templates/Persistant-VolumeClaim-wordpress.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "20Gi"
---
# Source: wordpress-mysql/templates/PersistantVolumeClaim-mysql.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "20Gi"
---
# Source: wordpress-mysql/templates/deployment-mysql.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-wordpress-mysql
  labels:
    app: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
    spec:
      serviceAccountName: mysql
      securityContext:
      containers:
      - name: mysql
        securityContext:
            {}
        image: mysql:5.6
        imagePullPolicy: IfNotPresent
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-pass
                key: password
        ports:
          - containerPort: 3306
            name: 
            protocol: TCP
        volumeMounts:
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
# Source: wordpress-mysql/templates/deployment-wordpress.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-wordpress-mysql
  labels:
    app: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      serviceAccountName: mysql
      securityContext:
      containers:
      - name: wordpress
        securityContext:
            {}
        image: wordpress:4.8-apache
        imagePullPolicy: IfNotPresent
        env:
          - name: WORDPRESS_DB_HOST
            value:  wordpress-mysql
          - name: WORDPRESS_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-pass
                key: password
        ports:
          - containerPort: 80
            name: 
            protocol: TCP
        volumeMounts:
          - name: wordpress-persistent-storage
            mountPath: /var/www/html
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
      volumes:
        - name: wordpress-persistent-storage
          persistentVolumeClaim:
            claimName: wp-pv-claim
---
# Source: wordpress-mysql/templates/tests/test-connection-mysql.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mysql-test-connection"
  labels:
  app: wordpress
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['mysql:3306']
  restartPolicy: Never
---
# Source: wordpress-mysql/templates/tests/test-connection-wordpress.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "wordpress-test-connection"
  labels:
  app: wordpress
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['wordpress:80']
      type: LoadBalancer
  restartPolicy: Never
