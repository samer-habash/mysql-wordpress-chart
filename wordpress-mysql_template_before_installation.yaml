---
# Source: wordpress-mysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysql
  labels:
    app: wordpress
    tier: frontend
---
# Source: wordpress-mysql/templates/secret-mysql.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret-releasev1
type: Opaque
data:
  mysqlpass: "c2pkQTBMdkJtWA=="
---
# Source: wordpress-mysql/templates/Persistant-VolumeClaim-wordpress.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # The default name in helpers.tpl + The release name
  name: wp-pv-claim-releasev1
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "20Gi"
---
# Source: wordpress-mysql/templates/PersistantVolumeClaim-mysql.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # The default name in helpers.tpl + The release name
  name: mysql-pv-claim-releasev1
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "20Gi"
---
# Source: wordpress-mysql/templates/service-mysql.yaml
apiVersion: v1
kind: Service
metadata:
  # The default name in helpers.tpl + The release name
  name: mysql-releasev1
  labels:
    app: wordpress
spec:
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
  selector:
    app: wordpress
    tier: mysql
  type: ClusterIP
  clusterIP: None
---
# Source: wordpress-mysql/templates/service-wordpress.yaml
apiVersion: v1
kind: Service
metadata:
  # The default name in helpers.tpl + The release name
  name: wordpress-releasev1
  labels:
    app: wordpress
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: wordpress
    tier: frontend
  type: LoadBalancer
---
# Source: wordpress-mysql/templates/deployment-mysql.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  # The default name in helpers.tpl + The release name
  name: mysql-releasev1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
    spec:
      serviceAccountName: mysql
      securityContext:
      containers:
        - name: mysql
          securityContext:
            {}
          image: mysql:5.6
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret-releasev1
                  key: mysqlpass
          ports:
            - containerPort: 3306
              name: 
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
#
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim-releasev1
---
# Source: wordpress-mysql/templates/deployment-wordpress.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  # The default name in helpers.tpl + The release name
  name: wordpress-releasev1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      serviceAccountName: mysql
      securityContext:
      containers:
        - name: wordpress
          securityContext:
            {}
          image: wordpress:4.8-apache
          imagePullPolicy: IfNotPresent
          env:
            - name: WORDPRESS_DB_HOST
              value:  wordpress-mysql
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret-releasev1
                  key: mysqlpass
          ports:
            - containerPort: 80
              name: 
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http

          volumeMounts:
          - name: wordpress-persistent-storage
            mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim-releasev1
---
# Source: wordpress-mysql/templates/tests/test-connection.yaml
# Test Connection for wordpress since it can be accessed via web
apiVersion: v1
kind: Pod
metadata:
  name: "wordpress-test-connection"
  labels:
  app: wordpress
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['wordpress:80']
      type: LoadBalancer
  restartPolicy: Never
